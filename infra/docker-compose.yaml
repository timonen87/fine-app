volumes:
  frontend_volume: {}
  frontend_storage: {}
  redis_volume: {}
  postgresql_volume: {}
  production_media: {}
  production_traefik: {}

services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:canary
    container_name: affine_selfhosted
    command:
      ['sh', '-c', 'node ./scripts/self-host-predeploy && node ./dist/index.js']
    # ports:
    # - '3010:3010'
    #   - '5555:5555'
    expose:
      - '80'
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      # custom configurations
      - frontend_volume:/root/.affine/config
      # blob storage
      - frontend_storage:/root/.affine/storage
    logging:
      driver: 'json-file'
      options:
        max-size: '1000m'
    restart: unless-stopped
    env_file:
      - ./.env

  redis:
    image: redis
    container_name: affine_redis
    restart: unless-stopped
    volumes:
      - redis_volume:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres
    container_name: affine_postgres
    restart: unless-stopped
    volumes:
      - postgresql_volume:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U affine']
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env

  # nginx:
  #   image: nginx:1.23.3
  #   restart: unless-stopped
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - '80:80'
  #     - '443:443'
  #   depends_on:
  #     - affine
  #   volumes:
  #     - ./nginx/:/etc/nginx/templates:rw
  #     # - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     # - ./nginx/cert.pem:/etc/cert.pem
  #     # - ./nginx/key.pem:/etc/key.pem
  #     # - ./data/certbot/conf/:/etc/letsencrypt/:rw
  #     # - ./data/certbot/www/:/var/www/certbot/:rw
  #   command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  #   env_file:
  #     - ./.env

  nginx:
    image: nginx:1.23.3
    depends_on:
      - affine
    volumes:
      # production
      # - ./nginx/:/etc/nginx/templates:rw
      # - ./nginx/cert.pem:/etc/cert.pem
      # - ./nginx/key.pem:/etc/key.pem

      # localhost
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    ports:
      - '80:80'
      - '443:443'

  # certbot:
  #   ports:
  #     - "6000:80"
  #   env_file:
  #     - ./.env
  #   # и снова мониторуем директорию nginx
  #   volumes:
  #     - ./nginx/:/etc/nginx/
  #   build:
  #     context: ./certbot
  #     dockerfile: Dockerfile
  #     # задаем переменные среды
  #     args:
  #       DOMAIN_EMAIL: ${DOMAIN_EMAIL}
  #       DOMAIN_URL: ${DOMAIN_URL}
