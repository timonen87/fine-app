version: '3.8'

services:
  affine-server:
    # image: ghcr.io/toeverything/affine-graphql:stable
    image: ghcr.io/timonen87/notionai-server:canary
    container_name: affine_server
    command:
      ['sh', '-c', 'node ./scripts/self-host-predeploy && node ./dist/index.js']
    ports:
      - '5555:5555'
      - '3010:3010'
    expose:
      - '8080'
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

    volumes:
      # custom configurations
      - ~/.affine/self-host/config:/root/.affine/config
      # blob storage
      - ~/.affine/self-host/storage:/root/.affine/storage
    logging:
      driver: 'json-file'
      options:
        max-size: '1000m'
    restart: unless-stopped
    environment:
      - NODE_OPTIONS="--import=./scripts/register.js"
      - AFFINE_CONFIG_PATH=/root/.affine/config/
      # - AFFINE_ENV=canary
      # - EXTERNAL_URL=https://notionai.pro

      - AFFINE_SERVER_PORT=3010
      - AFFINE_SERVER_HOST=localhost
      - AFFINE_SERVER_HTTPS=false

      - REDIS_SERVER_HOST=redis

      - DATABASE_URL=postgres://affine:affine@postgres:5432/affine_db_13
      - NODE_ENV=production

      - OAUTH_GOOGLE_CLIENT_ID=54211129985-t7k92hecs8c1bajo0k9eq2vt93jf07p6.apps.googleusercontent.com
      - OAUTH_GOOGLE_CLIENT_SECRET=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

      - MAILER_HOST=smtp.gmail.com
      - MAILER_PORT=465
      - MAILER_USER=timonen.as@gmail.com
      - MAILER_PASSWORD=dmjlguvuqxunggfr
      - MAILER_SENDER=info@notionai.pro
      - MAILER_SECURE=true

      - R2_ACCESS_KEY_ID=iYin8cGQYBQCGbfoUbR3Na
      - R2_SECRET_ACCESS_KEY=8a5grvzJF7S4Mq8ijStA1cNRHS7BUaoywXxZiNVrdjzU

      - AFFINE_ADMIN_EMAIL=timonen.as@gmail.com
      - AFFINE_ADMIN_PASSWORD=13Tarantul
    networks:
      - frontend
      - backend

  affine-front:
    # image: ghcr.io/toeverything/affine-front:canary
    image: ghcr.io/timonen87/notionai-front:canary

    container_name: affine_front
    # command:
    #     ['sh', '-c', 'node ./scripts/self-host-predeploy && node ./dist/index.js']

    ports:
      - '8080:8080'
    expose:
      - '3010'
    depends_on:
      - affine-server
    restart: unless-stopped
    volumes:
      # custom configurations
      - ~/.affine/self-host/app/dist:/root/.affine/dist
      # - ~/.affine/self-host/app/admin:/root/.affine/admin
      # - ~/.affine/self-host/app/mobile:/root/.affine/mobile
    logging:
      driver: 'json-file'
      options:
        max-size: '1000m'
    environment:
      - BUILD_TYPE='canary'
      - NODE_ENV=development
      - DEPLOY_HOST=localhost:8080
      - AFFINE_CONFIG_PATH=/root/.affine/config/
      # - AFFINE_ENV=canary
      # - EXTERNAL_URL=https://notionai.pro

      # - AFFINE_SERVER_PORT=3010
      # - AFFINE_SERVER_HOST=localhost
      # - AFFINE_SERVER_HTTPS=false

    networks:
      - frontend
      - backend

  # traefik:
  #   build:
  #     context: .
  #     dockerfile: ./.github/deployment/traefik/Dockerfile
  #   image: affine_production_traefik
  #   depends_on:
  #     - affine-server
  #   volumes:
  #     - ~/.affine/traefik:/etc/traefik/acme
  #   ports:
  #     - '0.0.0.0:8080:8080'
  #     # - '0.0.0.0:443:443'
  #     - '0.0.0.0:5555:5555'
  #     - '0.0.0.0:3010:3010'

  redis:
    image: redis
    container_name: affine_redis
    restart: unless-stopped
    volumes:
      - ~/.affine/self-host/redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  postgres:
    image: postgres
    container_name: affine_postgres
    restart: unless-stopped
    volumes:
      - ~/.affine/self-host/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U affine']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: affine
      POSTGRES_PASSWORD: affine
      POSTGRES_DB: affine
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - backend

  # nginx:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   image: affine_nginx
  #   depends_on:
  #     - affine-server
  #   # ports:
  #   #   - '5555:5555'
  #   #   - '3010:3010'
  #   networks:
  #     - frontend

  #   volumes:
  #     - ~/.affine/self-host/nginx:/nginx

networks:
  frontend:
  backend:

  # watchtower:
  #   image: containrrr/watchtower
  #   restart: unless-stopped
  #   container_name: watchtower
  #   environment:
  #     - WATCHTOWER_POLL_INTERVAL=1800
  #     - WATCHTOWER_CLEANUP=true
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /root/.docker/config.json:/config.json
